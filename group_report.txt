Please fill out the report below. You are still required to supply a
README file that will provide instructions on use. You should be
thorough in your descriptions, but there is no need to be verbose.

Project Name: Blackjack - Beat the Odds!
Group Members:
(1) Preetam D'Souza
(2) Max Guo
 
*1* Project Description
  
(a) Describe the original goal(s) of your project.

	We guaranteed a working blackjack game with a perfect bot. We also guaranteed a way of monitoring the player as he plays relative to the bot. We also planned on having varying parameters, such as number of decks and number of players.

(b) Describe the completed goal(s) of your project and the incomplete ones.

	We completed a working Blackjack training bot that plays perfect Blackjack while card-counting to increase earnings. While testing the bot, we implemented varying parameters but decided that the final game should be an one-on-one training session. Therefore, the final game does not include these parameters. However, you are still allowed to change your initial cash value. As you can see from our text-based version of the game (test.py), we have the varying parameters. In the end, however, we noticed that most casinos played by similar house rules (6 deck shoe, dealer stands on a 17), so we left only the initial cash value as a value the player could change.

(c) What was the most challenging part of the coding?

	The hardest part to code was definitely implementing the perfect blackjack strategies (especially splitting) as well as putting card-counting on top of these strategies. For splitting, we had to figure out how to loop through each hand but making sure nothing was counted twice. There was also a steep learning curve for the GUI because the documentation for wxPython was lacking to say the least. At times, it was also confusing, forcing us to resort to the C++ documentation instead.

*2* Programming

(a) What additional python code, e.g, pygame, wxpython, other modules, did you use in your project?

	We extensively used wxPython to render our game.

(b) What python paradigms did you use in your code?

	Our code is heavily object-oriented. We took advantage of Python's inheritance structure to write as little code as possible. Our code is broken up into several parts. For example, we have the Deck, Dealer, Player, Bot, etc.

(c) Is python a good programming language for the task you set about completing?

	Python was a suitable match for our project goals. A lot of our data were stored in lists and Python's built-in list functions were extremely useful.

*3* Personal

(a) Is your group satisfied with the final version of your code?

	Yes, we are satisfied with our code. After we completed the final version and played through our game, we were excited to see it finally running.

(b) If you had more time, what would additions would you make?

	We would first streamline the GUI. We also wanted to add in a second bot. This bot, however, would play completely separate from the player except for the very first hand. After that, the bot would completely diverge from the player (for example, cards received). This would be helpful to compare a bot's earnings to your earnings, given the same starting hand and the same playing time.

(c) Based on the final result, how do your rank it all a scale from 0 to 5, where 0 is horrible and 5 is super duper awesome?

	We think of it as a 4.

(d) Would you be willing to release your code under GPL (v3) (or any other license) and have it posted on the class website. If so, please prepare your code prior to submission as described in the release instructions (or for the license of your choice).

	We were planning to further improve our code before releasing it.

*4* Presentation

Please provide a (three-line) paragraph describing your project
and include a screen shot in your submission to be posted on the class
web-site:

	This is a Blackjack simulator. You play as a regular player, trying to card count and match a perfect bot. Try to earn as much as you can!
